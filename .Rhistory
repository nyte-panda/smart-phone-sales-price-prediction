# Load libraries
library(dplyr); library(psych); library(readxl); library(car); library(corrr)
### CORR TESTING
## heatmap of continuous var
?cor_mat(df %>%select(RAM, Storage, Final.Price), method = "pearson")
install.packages("rstatix")
# Load libraries
library(dplyr); library(psych); library(readxl); library(car); library(rstatix)
# Data preparation
df <- read.csv("data/smartphones.csv")
df <- na.omit(df)
# Converting variables to appropriate data types
df$Smartphone <- as.factor(df$Smartphone)
df$Brand <- as.factor(df$Brand)
df$Model <- as.factor(df$Model)
df$Color <- as.factor(df$Color)
df$Storage <- as.numeric(df$Storage)
df$Final.Price <- as.numeric(df$Final.Price)
df$RAM <- as.numeric(df$RAM)
df$Free <- as.factor(df$Free)
####EDA####
final_price_hist = hist(df$Final.Price, main = "Final Price Distribution") ## most price falls below 500
boxplot(df$Final.Price~df$Brand, main = "Final Price by brand")
# frequency of RAM
ram_prob_table = table(df$RAM)/ sum(table(df$RAM))
barplot(ram_prob_table,main = "Distribution of RAM size as % of total") ## 4s and 8s RAm are mos prominent
## frequency of Storage
storage_prob_table = table(df$Storage)/ sum(table(df$Storage))
barplot(storage_prob_table,main = "Distribution of Storage size as % of total") ## 128gbs are most famous
### CORR TESTING
## heatmap of continuous var
cor_mat(df %>%select(RAM, Storage, Final.Price), method = "pearson")
# high corr between RAM and Storage  => interactions term?
# Chi-squares for corr between "Free" and "Brand"
contin_table_brand_free = table(df%>% select(Brand, Free))
chisq.test(contin_table_brand_free) ## Reject Ho, there is enough evidence to say that brand and free are dependent
# ANNOVA test between RAM and Brand
ram_brand_annova = aov(df$RAM~factor(df$Brand))
summary.aov(ram_brand_annova)
# ANNOVA test between RAM and Model
ram_model_annova = aov(df$RAM~factor(df$Model))
summary.aov(ram_model_annova) ## Reject Ho, there is enough evidence to say that brand and model are dependent
# Feature Engineering & Regression
RAM_Storage <- df$RAM * df$Storage
Brand_RAM_Interaction <- as.numeric(df$Brand) * df$RAM
Model_Interaction <- as.numeric(df$Model) * df$RAM
# Model Building
null_model <- lm(Final.Price ~ 1, data = df)
summary(null_model)
full_model <- lm(Final.Price ~ RAM + Storage + RAM_Storage + Brand_RAM_Interaction + Model_Interaction, data = df)
summary(full_model)
# Forward Selection
forward_model <- step(null_model, direction = "forward", scope = formula(full_model))
summary(forward_model)
# Backward Selection
backward_model <- step(full_model, direction = "backward", trace = 1)
summary(backward_model)
# Stepwise Selection
stepwise_model <- step(null_model, direction = "both", scope = formula(full_model), trace =1)
summary(stepwise_model)
# Plot the residuals
plot(model$residuals)
####EDA####
final_price_hist = hist(df$Final.Price, main = "Final Price Distribution") ## most price falls below 500
boxplot(df$Final.Price~df$Brand, main = "Final Price by brand")
# frequency of RAM
ram_prob_table = table(df$RAM)/ sum(table(df$RAM))
barplot(ram_prob_table,main = "Distribution of RAM size as % of total") ## 4s and 8s RAm are mos prominent
## frequency of Storage
storage_prob_table = table(df$Storage)/ sum(table(df$Storage))
barplot(storage_prob_table,main = "Distribution of Storage size as % of total") ## 128gbs are most famous
### CORR TESTING
## heatmap of continuous var
cor_mat(df %>%select(RAM, Storage, Final.Price), method = "pearson")
# high corr between RAM and Storage  => interactions term?
# Chi-squares for corr between "Free" and "Brand"
contin_table_brand_free = table(df%>% select(Brand, Free))
chisq.test(contin_table_brand_free) ## Reject Ho, there is enough evidence to say that brand and free are dependent
# ANNOVA test between RAM and Brand
ram_brand_annova = aov(df$RAM~factor(df$Brand))
summary.aov(ram_brand_annova)
# ANNOVA test between RAM and Model
ram_model_annova = aov(df$RAM~factor(df$Model))
summary.aov(ram_model_annova) ## Reject Ho, there is enough evidence to say that brand and model are dependent
# Feature Engineering & Regression
RAM_Storage <- df$RAM * df$Storage
Brand_RAM_Interaction <- as.numeric(df$Brand) * df$RAM
Model_Interaction <- as.numeric(df$Model) * df$RAM
# Model Building
null_model <- lm(Final.Price ~ 1, data = df)
summary(null_model)
full_model <- lm(Final.Price ~ RAM + Storage + RAM_Storage + Brand_RAM_Interaction + Model_Interaction, data = df)
summary(full_model)
# Forward Selection
forward_model <- step(null_model, direction = "forward", scope = formula(full_model))
summary(forward_model)
# Backward Selection
backward_model <- step(full_model, direction = "backward", trace = 1)
summary(backward_model)
# Stepwise Selection
stepwise_model <- step(null_model, direction = "both", scope = formula(full_model), trace =1)
summary(stepwise_model)
# Plot the residuals
plot(model$residuals)
# Load libraries
library(dplyr); library(psych); library(readxl); library(car); library(rstatix)
# Data preparation
df <- read.csv("data/smartphones.csv")
df <- na.omit(df)
# Converting variables to appropriate data types
df$Smartphone <- as.factor(df$Smartphone)
df$Brand <- as.factor(df$Brand)
df$Model <- as.factor(df$Model)
df$Color <- as.factor(df$Color)
df$Storage <- as.numeric(df$Storage)
df$Final.Price <- as.numeric(df$Final.Price)
df$RAM <- as.numeric(df$RAM)
df$Free <- as.factor(df$Free)
####EDA####
final_price_hist = hist(df$Final.Price, main = "Final Price Distribution") ## most price falls below 500
boxplot(df$Final.Price~df$Brand, main = "Final Price by brand")
# frequency of RAM
ram_prob_table = table(df$RAM)/ sum(table(df$RAM))
barplot(ram_prob_table,main = "Distribution of RAM size as % of total") ## 4s and 8s RAm are mos prominent
## frequency of Storage
storage_prob_table = table(df$Storage)/ sum(table(df$Storage))
barplot(storage_prob_table,main = "Distribution of Storage size as % of total") ## 128gbs are most famous
### CORR TESTING
## heatmap of continuous var
cor_mat(df %>%select(RAM, Storage, Final.Price), method = "pearson")
# high corr between RAM and Storage  => interactions term?
# Chi-squares for corr between "Free" and "Brand"
contin_table_brand_free = table(df%>% select(Brand, Free))
chisq.test(contin_table_brand_free) ## Reject Ho, there is enough evidence to say that brand and free are dependent
# ANNOVA test between RAM and Brand
ram_brand_annova = aov(df$RAM~factor(df$Brand))
summary.aov(ram_brand_annova)
# ANNOVA test between RAM and Model
ram_model_annova = aov(df$RAM~factor(df$Model))
summary.aov(ram_model_annova) ## Reject Ho, there is enough evidence to say that brand and model are dependent
# Feature Engineering & Regression
RAM_Storage <- df$RAM * df$Storage
Brand_RAM_Interaction <- as.numeric(df$Brand) * df$RAM
Model_Interaction <- as.numeric(df$Model) * df$RAM
# Model Building
null_model <- lm(Final.Price ~ 1, data = df)
summary(null_model)
full_model <- lm(Final.Price ~ RAM + Storage + RAM_Storage + Brand_RAM_Interaction + Model_Interaction, data = df)
summary(full_model)
# Forward Selection
forward_model <- step(null_model, direction = "forward", scope = formula(full_model))
summary(forward_model)
# Backward Selection
backward_model <- step(full_model, direction = "backward", trace = 1)
summary(backward_model)
# Stepwise Selection
stepwise_model <- step(null_model, direction = "both", scope = formula(full_model), trace =1)
summary(stepwise_model)
summary(null_model)
summary(full_model)
summary(forward_model)
df
full_model <- lm(Final.Price ~ RAM + Storage + Brand + Color + Free + RAM_Storage + Brand_RAM_Interaction + Model_Interaction, data = df)
summary(full_model)
full_model <- lm(Final.Price ~ RAM + Storage+ Free + RAM_Storage + Brand_RAM_Interaction + Model_Interaction, data = df)
summary(full_model)
View(df)
RAM_Storage <- df$RAM * df$Storage
Brand_RAM_Interaction <- as.numeric(df$Brand) * df$RAM
free_RAM_Interaction <- as.numeric(df$Free) * df$RAM
#full model
full_model <- lm(Final.Price ~ RAM + Storage+ Free + Brand + RAM_Storage + Brand_RAM_Interaction + free_RAM_Interaction, data = df)
##why not add color +brand?
summary(full_model)
#full model
full_model <- lm(Final.Price ~ RAM + Storage+ Free + Color + RAM_Storage + Brand_RAM_Interaction + free_RAM_Interaction, data = df)
##why not add color +brand?
summary(full_model)
free_storage_Interaction <- as.numeric(df$Brand) * df$Storage
free_RAM_Interaction <- as.numeric(df$Free) * df$RAM
# Model Building
null_model <- lm(Final.Price ~ 1, data = df)
summary(null_model)
#full model
full_model <- lm(Final.Price ~ RAM + Storage+ Free + Color + RAM_Storage + free_storage_Interaction + free_RAM_Interaction, data = df)
##why not add color +brand?
summary(full_model)
#full model
full_model <- lm(Final.Price ~ RAM + Storage+ Free + RAM_Storage + free_storage_Interaction + free_RAM_Interaction, data = df)
##why not add color +brand?
summary(full_model)
# Forward Selection
forward_model <- step(null_model, direction = "forward", scope = formula(full_model))
summary(forward_model)
free_storage_Interaction <- as.numeric(df$Free) * df$Storage
free_RAM_Interaction <- as.numeric(df$Free) * df$RAM
# Model Building
null_model <- lm(Final.Price ~ 1, data = df)
summary(null_model)
#full model
full_model <- lm(Final.Price ~ RAM + Storage+ Free + RAM_Storage + free_storage_Interaction + free_RAM_Interaction, data = df)
##why not add color +brand?
summary(full_model)
# Forward Selection
forward_model <- step(null_model, direction = "forward", scope = formula(full_model))
summary(forward_model)
df$RAM_Storage <- df$RAM * df$Storage
df$free_storage_Interaction <- as.numeric(df$Free) * df$Storage
df$free_RAM_Interaction <- as.numeric(df$Free) * df$RAM
df
# Feature Engineering & Regression
df$free_YES = ifelse(df$Free = "Yes", 1,0)
# Feature Engineering & Regression
df$free_YES = if_else(df$Free = "Yes", 1,0)
# Feature Engineering & Regression
df$free_YES = if_else(df$Free == "Yes", 1,0)
df
# Load libraries
library(dplyr); library(psych); library(readxl); library(car); library(rstatix)
# Data preparation
df <- read.csv("data/smartphones.csv")
df <- na.omit(df)
# Converting variables to appropriate data types
df$Smartphone <- as.factor(df$Smartphone)
df$Brand <- as.factor(df$Brand)
df$Model <- as.factor(df$Model)
df$Color <- as.factor(df$Color)
df$Storage <- as.numeric(df$Storage)
df$Final.Price <- as.numeric(df$Final.Price)
df$RAM <- as.numeric(df$RAM)
df$Free <- as.factor(df$Free)
####EDA####
final_price_hist = hist(df$Final.Price, main = "Final Price Distribution") ## most price falls below 500
boxplot(df$Final.Price~df$Brand, main = "Final Price by brand")
# frequency of RAM
ram_prob_table = table(df$RAM)/ sum(table(df$RAM))
barplot(ram_prob_table,main = "Distribution of RAM size as % of total") ## 4s and 8s RAm are mos prominent
## frequency of Storage
storage_prob_table = table(df$Storage)/ sum(table(df$Storage))
barplot(storage_prob_table,main = "Distribution of Storage size as % of total") ## 128gbs are most famous
### CORR TESTING
## heatmap of continuous var
cor_mat(df %>%select(RAM, Storage, Final.Price), method = "pearson")
# high corr between RAM and Storage  => interactions term?
# Chi-squares for corr between "Free" and "Brand"
contin_table_brand_free = table(df%>% select(Brand, Free))
chisq.test(contin_table_brand_free) ## Reject Ho, there is enough evidence to say that brand and free are dependent
# ANNOVA test between RAM and Brand
ram_brand_annova = aov(df$RAM~factor(df$Brand))
summary.aov(ram_brand_annova)
# ANNOVA test between RAM and Model
ram_model_annova = aov(df$RAM~factor(df$Model))
summary.aov(ram_model_annova) ## Reject Ho, there is enough evidence to say that brand and model are dependent
# Feature Engineering & Regression
##adding features
df$free_YES = if_else(df$Free == "Yes", 1,0)
df$RAM_Storage <- df$RAM * df$Storage
df$free_storage_Interaction <- df$free_YES * df$Storage
df$free_RAM_Interaction <- df$free_YES * df$RAM
df
# Model Building
null_model <- lm(Final.Price ~ 1, data = df)
summary(null_model)
#full model
full_model <- lm(Final.Price ~ RAM + Storage+ Free + RAM_Storage + free_storage_Interaction + free_RAM_Interaction, data = df)
##why not add color +brand?
summary(full_model)
# Forward Selection
forward_model <- step(null_model, direction = "forward", scope = formula(full_model))
summary(forward_model)
# Backward Selection
backward_model <- step(full_model, direction = "backward", trace = 1)
summary(backward_model)
# Stepwise Selection
stepwise_model <- step(null_model, direction = "both", scope = formula(full_model), trace =1)
summary(stepwise_model)
# Plot the residuals
plot(model$residuals)
#full model
full_model <- lm(Final.Price ~ RAM + Storage+ Free + RAM_Storage + free_storage_Interaction + free_RAM_Interaction, data = df)
##why not add color +brand?
summary(full_model)
# Forward Selection
forward_model <- step(null_model, direction = "forward", scope = formula(full_model))
summary(forward_model)
#full model
full_model <- lm(Final.Price ~ RAM + Storage+ Free + RAM*Storage + free_YES*Storage + free_YES*RAM, data = df)
##why not add color +brand?
summary(full_model)
#full model
full_model <- lm(Final.Price ~ RAM + Storage+ RAM*Storage + free_YES*Storage + free_YES*RAM, data = df)
##why not add color +brand?
summary(full_model)
# Forward Selection
forward_model <- step(null_model, direction = "forward", scope = formula(full_model))
summary(forward_model)
# Backward Selection
backward_model <- step(full_model, direction = "backward", trace = 1)
summary(backward_model)
# Stepwise Selection
stepwise_model <- step(null_model, direction = "both", scope = formula(full_model), trace =1)
summary(stepwise_model)
summary(backward_model)
summary(stepwise_model)
# Forward Selection
forward_model <- step(null_model, direction = "forward", scope = formula(full_model))
summary(forward_model)
#full model
full_model <- lm(Final.Price ~ RAM + Storage+ RAM*Storage + free_YES*Storage + free_YES*RAM, data = df)
##why not add color +brand?
summary(full_model)
# Plot the residuals
plot(model$residuals)
##why not add color +brand?
summary(full_model)
#full model
full_model <- lm(Final.Price ~ RAM + Color + Storage+ RAM*Storage + free_YES*Storage + free_YES*RAM, data = df)
##why not add color +brand ==> too much values, does not provide insights too model
summary(full_model)
#full model
full_model <- lm(Final.Price ~ RAM + Storage+ RAM*Storage + free_YES*Storage + free_YES*RAM, data = df)
##why not add color +brand ==> too much values, does not provide insights too model
summary(full_model)
# Forward Selection
forward_model <- step(null_model, direction = "forward", scope = formula(full_model))
summary(forward_model)
# Backward Selection
backward_model <- step(full_model, direction = "backward", trace = 1)
summary(backward_model)
# Stepwise Selection
stepwise_model <- step(null_model, direction = "both", scope = formula(full_model), trace =1)
summary(stepwise_model)
# Load libraries
library(dplyr); library(psych); library(readxl); library(car); library(rstatix); library(caret)
install.packages("caret")
# Load libraries
library(dplyr); library(psych); library(readxl); library(car); library(rstatix); library(caret)
#cross_validation: K-fold
?train()
stepwise_model.attributes
?stepwise_model.attributes
attributes(stepwise_model)
stepwise_model.model
stepwise_model$model
# Stepwise Selection
stepwise_model <- step(null_model, direction = "both", scope = formula(full_model), trace =1)
summary(stepwise_model)
# Stepwise Selection
stepwise_model <- step(null_model, direction = "both", scope = formula(full_model), trace =1)
attributes(stepwise_model)
summary(stepwise_model)
# Testing for multicollinearity
vif(stepwise_model)
?vif
# Testing for multicollinearity
vif(stepwise_model, type ="predictor")
# Plot the residuals
plot(stepwise_model$residuals)
# Plot the residuals
plot(stepwise_model$residuals, main = "residuals of model")
# Plot diagnostic plot
par(mfrow = c(2, 2))
plot(stepwise_model)
